// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Google.RockTree/proto/rocktree.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GeoGlobetrotterProtoRocktree {

  /// <summary>Holder for reflection information generated from Google.RockTree/proto/rocktree.proto</summary>
  public static partial class RocktreeReflection {

    #region Descriptor
    /// <summary>File descriptor for Google.RockTree/proto/rocktree.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RocktreeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRHb29nbGUuUm9ja1RyZWUvcHJvdG8vcm9ja3RyZWUucHJvdG8SH2dlb19n",
            "bG9iZXRyb3R0ZXJfcHJvdG9fcm9ja3RyZWUiUQoTQnVsa01ldGFkYXRhUmVx",
            "dWVzdBI6Cghub2RlX2tleRgBIAEoCzIoLmdlb19nbG9iZXRyb3R0ZXJfcHJv",
            "dG9fcm9ja3RyZWUuTm9kZUtleSKtAQoPTm9kZURhdGFSZXF1ZXN0EjoKCG5v",
            "ZGVfa2V5GAEgASgLMiguZ2VvX2dsb2JldHJvdHRlcl9wcm90b19yb2NrdHJl",
            "ZS5Ob2RlS2V5EkcKDnRleHR1cmVfZm9ybWF0GAIgASgOMi8uZ2VvX2dsb2Jl",
            "dHJvdHRlcl9wcm90b19yb2NrdHJlZS5UZXh0dXJlLkZvcm1hdBIVCg1pbWFn",
            "ZXJ5X2Vwb2NoGAMgASgNIiYKB05vZGVLZXkSDAoEcGF0aBgBIAEoCRINCgVl",
            "cG9jaBgCIAEoDSIhChBDb3B5cmlnaHRSZXF1ZXN0Eg0KBWVwb2NoGAEgASgN",
            "IukBChJUZXh0dXJlRGF0YVJlcXVlc3QSOgoIbm9kZV9rZXkYASABKAsyKC5n",
            "ZW9fZ2xvYmV0cm90dGVyX3Byb3RvX3JvY2t0cmVlLk5vZGVLZXkSRwoOdGV4",
            "dHVyZV9mb3JtYXQYAiABKA4yLy5nZW9fZ2xvYmV0cm90dGVyX3Byb3RvX3Jv",
            "Y2t0cmVlLlRleHR1cmUuRm9ybWF0Ek4KDnZpZXdfZGlyZWN0aW9uGAMgASgO",
            "MjYuZ2VvX2dsb2JldHJvdHRlcl9wcm90b19yb2NrdHJlZS5UZXh0dXJlLlZp",
            "ZXdEaXJlY3Rpb24iiAMKDEJ1bGtNZXRhZGF0YRJECg1ub2RlX21ldGFkYXRh",
            "GAEgAygLMi0uZ2VvX2dsb2JldHJvdHRlcl9wcm90b19yb2NrdHJlZS5Ob2Rl",
            "TWV0YWRhdGESPwoNaGVhZF9ub2RlX2tleRgCIAEoCzIoLmdlb19nbG9iZXRy",
            "b3R0ZXJfcHJvdG9fcm9ja3RyZWUuTm9kZUtleRIcChBoZWFkX25vZGVfY2Vu",
            "dGVyGAMgAygBQgIQARIcChBtZXRlcnNfcGVyX3RleGVsGAQgAygCQgIQARId",
            "ChVkZWZhdWx0X2ltYWdlcnlfZXBvY2gYBSABKA0SKQohZGVmYXVsdF9hdmFp",
            "bGFibGVfdGV4dHVyZV9mb3JtYXRzGAYgASgNEjEKKWRlZmF1bHRfYXZhaWxh",
            "YmxlX3ZpZXdfZGVwZW5kZW50X3RleHR1cmVzGAcgASgNEjgKMGRlZmF1bHRf",
            "YXZhaWxhYmxlX3ZpZXdfZGVwZW5kZW50X3RleHR1cmVfZm9ybWF0cxgIIAEo",
            "DSKqAwoMTm9kZU1ldGFkYXRhEhYKDnBhdGhfYW5kX2ZsYWdzGAEgASgNEg0K",
            "BWVwb2NoGAIgASgNEhsKE2J1bGtfbWV0YWRhdGFfZXBvY2gYBSABKA0SHQoV",
            "b3JpZW50ZWRfYm91bmRpbmdfYm94GAMgASgMEhgKEG1ldGVyc19wZXJfdGV4",
            "ZWwYBCABKAISLAogcHJvY2Vzc2luZ19vcmllbnRlZF9ib3VuZGluZ19ib3gY",
            "BiADKAFCAhABEhUKDWltYWdlcnlfZXBvY2gYByABKA0SIQoZYXZhaWxhYmxl",
            "X3RleHR1cmVfZm9ybWF0cxgIIAEoDRIpCiFhdmFpbGFibGVfdmlld19kZXBl",
            "bmRlbnRfdGV4dHVyZXMYCSABKA0SMAooYXZhaWxhYmxlX3ZpZXdfZGVwZW5k",
            "ZW50X3RleHR1cmVfZm9ybWF0cxgKIAEoDSJYCgVGbGFncxIPCgtSSUNIM0Rf",
            "TEVBRhABEhEKDVJJQ0gzRF9OT0RBVEEQAhIICgRMRUFGEAQSCgoGTk9EQVRB",
            "EAgSFQoRVVNFX0lNQUdFUllfRVBPQ0gQECLtAgoITm9kZURhdGESIgoWbWF0",
            "cml4X2dsb2JlX2Zyb21fbWVzaBgBIAMoAUICEAESNQoGbWVzaGVzGAIgAygL",
            "MiUuZ2VvX2dsb2JldHJvdHRlcl9wcm90b19yb2NrdHJlZS5NZXNoEhUKDWNv",
            "cHlyaWdodF9pZHMYAyADKA0SOgoIbm9kZV9rZXkYBCABKAsyKC5nZW9fZ2xv",
            "YmV0cm90dGVyX3Byb3RvX3JvY2t0cmVlLk5vZGVLZXkSHAoQa21sX2JvdW5k",
            "aW5nX2JveBgFIAMoAUICEAESOQoKd2F0ZXJfbWVzaBgGIAEoCzIlLmdlb19n",
            "bG9iZXRyb3R0ZXJfcHJvdG9fcm9ja3RyZWUuTWVzaBJFChZvdmVybGF5X3N1",
            "cmZhY2VfbWVzaGVzGAcgAygLMiUuZ2VvX2dsb2JldHJvdHRlcl9wcm90b19y",
            "b2NrdHJlZS5NZXNoEhMKC2Zvcl9ub3JtYWxzGAggASgMIqEFCgRNZXNoEhAK",
            "CHZlcnRpY2VzGAEgASgMEhUKDXZlcnRleF9hbHBoYXMYCSABKAwSFgoOdGV4",
            "dHVyZV9jb29yZHMYAiABKAwSDwoHaW5kaWNlcxgDIAEoDBIVCg1vY3RhbnRf",
            "cmFuZ2VzGAQgASgMEhQKDGxheWVyX2NvdW50cxgFIAEoDBI5Cgd0ZXh0dXJl",
            "GAYgAygLMiguZ2VvX2dsb2JldHJvdHRlcl9wcm90b19yb2NrdHJlZS5UZXh0",
            "dXJlEhsKE3RleHR1cmVfY29vcmRpbmF0ZXMYByABKAwSHwoTdXZfb2Zmc2V0",
            "X2FuZF9zY2FsZRgKIAMoAkICEAESHwoXbGF5ZXJfYW5kX29jdGFudF9jb3Vu",
            "dHMYCCABKAwSDwoHbm9ybWFscxgLIAEoDBITCgtub3JtYWxzX2RldhgQIAEo",
            "DBIPCgdtZXNoX2lkGAwgASgNEhMKC3NraXJ0X2ZsYWdzGA0gASgMItYBCgVM",
            "YXllchIOCgpPVkVSR1JPVU5EEAASFwoTVEVSUkFJTl9CRUxPV19XQVRFUhAB",
            "EhcKE1RFUlJBSU5fQUJPVkVfV0FURVIQAhISCg5URVJSQUlOX0hJRERFThAD",
            "EgkKBVdBVEVSEAQSEAoMV0FURVJfU0tJUlRTEAUSGQoVV0FURVJfU0tJUlRT",
            "X0lOVkVSVEVEEAYSEwoPT1ZFUkxBWV9TVVJGQUNFEAcSGgoWT1ZFUkxBWV9T",
            "VVJGQUNFX1NLSVJUUxAIEg4KCk5VTV9MQVlFUlMQCSJbCglMYXllck1hc2sS",
            "GwoXVEVSUkFJTl9XSVRIX09WRVJHUk9VTkQQBxIWChJURVJSQUlOX1dJVEhf",
            "V0FURVIQHBIZChVURVJSQUlOX1dJVEhPVVRfV0FURVIQDiKBAwoHVGV4dHVy",
            "ZRIMCgRkYXRhGAEgAygMEj8KBmZvcm1hdBgCIAEoDjIvLmdlb19nbG9iZXRy",
            "b3R0ZXJfcHJvdG9fcm9ja3RyZWUuVGV4dHVyZS5Gb3JtYXQSEgoFd2lkdGgY",
            "AyABKA06AzI1NhITCgZoZWlnaHQYBCABKA06AzI1NhJOCg52aWV3X2RpcmVj",
            "dGlvbhgFIAEoDjI2Lmdlb19nbG9iZXRyb3R0ZXJfcHJvdG9fcm9ja3RyZWUu",
            "VGV4dHVyZS5WaWV3RGlyZWN0aW9uEg8KB21lc2hfaWQYBiABKA0iSwoGRm9y",
            "bWF0EgcKA0pQRxABEggKBERYVDEQAhIICgRFVEMxEAMSCgoGUFZSVEMyEAQS",
            "CgoGUFZSVEM0EAUSDAoIQ1JOX0RYVDEQBiJQCg1WaWV3RGlyZWN0aW9uEgkK",
            "BU5BRElSEAASDAoITk9SVEhfNDUQARILCgdFQVNUXzQ1EAISDAoIU09VVEhf",
            "NDUQAxILCgdXRVNUXzQ1EAQihQEKC1RleHR1cmVEYXRhEjoKCG5vZGVfa2V5",
            "GAEgASgLMiguZ2VvX2dsb2JldHJvdHRlcl9wcm90b19yb2NrdHJlZS5Ob2Rl",
            "S2V5EjoKCHRleHR1cmVzGAIgAygLMiguZ2VvX2dsb2JldHJvdHRlcl9wcm90",
            "b19yb2NrdHJlZS5UZXh0dXJlIkwKCkNvcHlyaWdodHMSPgoKY29weXJpZ2h0",
            "cxgBIAMoCzIqLmdlb19nbG9iZXRyb3R0ZXJfcHJvdG9fcm9ja3RyZWUuQ29w",
            "eXJpZ2h0IjkKCUNvcHlyaWdodBIKCgJpZBgBIAEoDRIMCgR0ZXh0GAIgASgJ",
            "EhIKCnRleHRfY2xlYW4YAyABKAkiqgEKEVBsYW5ldG9pZE1ldGFkYXRhEkkK",
            "EnJvb3Rfbm9kZV9tZXRhZGF0YRgBIAEoCzItLmdlb19nbG9iZXRyb3R0ZXJf",
            "cHJvdG9fcm9ja3RyZWUuTm9kZU1ldGFkYXRhEg4KBnJhZGl1cxgCIAEoAhIc",
            "ChRtaW5fdGVycmFpbl9hbHRpdHVkZRgDIAEoAhIcChRtYXhfdGVycmFpbl9h",
            "bHRpdHVkZRgEIAEoAg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.BulkMetadataRequest), global::GeoGlobetrotterProtoRocktree.BulkMetadataRequest.Parser, new[]{ "NodeKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.NodeDataRequest), global::GeoGlobetrotterProtoRocktree.NodeDataRequest.Parser, new[]{ "NodeKey", "TextureFormat", "ImageryEpoch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.NodeKey), global::GeoGlobetrotterProtoRocktree.NodeKey.Parser, new[]{ "Path", "Epoch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.CopyrightRequest), global::GeoGlobetrotterProtoRocktree.CopyrightRequest.Parser, new[]{ "Epoch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.TextureDataRequest), global::GeoGlobetrotterProtoRocktree.TextureDataRequest.Parser, new[]{ "NodeKey", "TextureFormat", "ViewDirection" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.BulkMetadata), global::GeoGlobetrotterProtoRocktree.BulkMetadata.Parser, new[]{ "NodeMetadata", "HeadNodeKey", "HeadNodeCenter", "MetersPerTexel", "DefaultImageryEpoch", "DefaultAvailableTextureFormats", "DefaultAvailableViewDependentTextures", "DefaultAvailableViewDependentTextureFormats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.NodeMetadata), global::GeoGlobetrotterProtoRocktree.NodeMetadata.Parser, new[]{ "PathAndFlags", "Epoch", "BulkMetadataEpoch", "OrientedBoundingBox", "MetersPerTexel", "ProcessingOrientedBoundingBox", "ImageryEpoch", "AvailableTextureFormats", "AvailableViewDependentTextures", "AvailableViewDependentTextureFormats" }, null, new[]{ typeof(global::GeoGlobetrotterProtoRocktree.NodeMetadata.Types.Flags) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.NodeData), global::GeoGlobetrotterProtoRocktree.NodeData.Parser, new[]{ "MatrixGlobeFromMesh", "Meshes", "CopyrightIds", "NodeKey", "KmlBoundingBox", "WaterMesh", "OverlaySurfaceMeshes", "ForNormals" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.Mesh), global::GeoGlobetrotterProtoRocktree.Mesh.Parser, new[]{ "Vertices", "VertexAlphas", "TextureCoords", "Indices", "OctantRanges", "LayerCounts", "Texture", "TextureCoordinates", "UvOffsetAndScale", "LayerAndOctantCounts", "Normals", "NormalsDev", "MeshId", "SkirtFlags" }, null, new[]{ typeof(global::GeoGlobetrotterProtoRocktree.Mesh.Types.Layer), typeof(global::GeoGlobetrotterProtoRocktree.Mesh.Types.LayerMask) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.Texture), global::GeoGlobetrotterProtoRocktree.Texture.Parser, new[]{ "Data", "Format", "Width", "Height", "ViewDirection", "MeshId" }, null, new[]{ typeof(global::GeoGlobetrotterProtoRocktree.Texture.Types.Format), typeof(global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.TextureData), global::GeoGlobetrotterProtoRocktree.TextureData.Parser, new[]{ "NodeKey", "Textures" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.Copyrights), global::GeoGlobetrotterProtoRocktree.Copyrights.Parser, new[]{ "Copyrights_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.Copyright), global::GeoGlobetrotterProtoRocktree.Copyright.Parser, new[]{ "Id", "Text", "TextClean" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GeoGlobetrotterProtoRocktree.PlanetoidMetadata), global::GeoGlobetrotterProtoRocktree.PlanetoidMetadata.Parser, new[]{ "RootNodeMetadata", "Radius", "MinTerrainAltitude", "MaxTerrainAltitude" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BulkMetadataRequest : pb::IMessage<BulkMetadataRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BulkMetadataRequest> _parser = new pb::MessageParser<BulkMetadataRequest>(() => new BulkMetadataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BulkMetadataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulkMetadataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulkMetadataRequest(BulkMetadataRequest other) : this() {
      nodeKey_ = other.nodeKey_ != null ? other.nodeKey_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulkMetadataRequest Clone() {
      return new BulkMetadataRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private global::GeoGlobetrotterProtoRocktree.NodeKey nodeKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.NodeKey NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BulkMetadataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BulkMetadataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NodeKey, other.NodeKey)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nodeKey_ != null) hash ^= NodeKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nodeKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nodeKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nodeKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BulkMetadataRequest other) {
      if (other == null) {
        return;
      }
      if (other.nodeKey_ != null) {
        if (nodeKey_ == null) {
          NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
        }
        NodeKey.MergeFrom(other.NodeKey);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nodeKey_ == null) {
              NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(NodeKey);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nodeKey_ == null) {
              NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(NodeKey);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NodeDataRequest : pb::IMessage<NodeDataRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeDataRequest> _parser = new pb::MessageParser<NodeDataRequest>(() => new NodeDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeDataRequest(NodeDataRequest other) : this() {
      _hasBits0 = other._hasBits0;
      nodeKey_ = other.nodeKey_ != null ? other.nodeKey_.Clone() : null;
      textureFormat_ = other.textureFormat_;
      imageryEpoch_ = other.imageryEpoch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeDataRequest Clone() {
      return new NodeDataRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private global::GeoGlobetrotterProtoRocktree.NodeKey nodeKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.NodeKey NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = value;
      }
    }

    /// <summary>Field number for the "texture_format" field.</summary>
    public const int TextureFormatFieldNumber = 2;
    private readonly static global::GeoGlobetrotterProtoRocktree.Texture.Types.Format TextureFormatDefaultValue = global::GeoGlobetrotterProtoRocktree.Texture.Types.Format.Jpg;

    private global::GeoGlobetrotterProtoRocktree.Texture.Types.Format textureFormat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.Texture.Types.Format TextureFormat {
      get { if ((_hasBits0 & 1) != 0) { return textureFormat_; } else { return TextureFormatDefaultValue; } }
      set {
        _hasBits0 |= 1;
        textureFormat_ = value;
      }
    }
    /// <summary>Gets whether the "texture_format" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextureFormat {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "texture_format" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextureFormat() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "imagery_epoch" field.</summary>
    public const int ImageryEpochFieldNumber = 3;
    private readonly static uint ImageryEpochDefaultValue = 0;

    private uint imageryEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ImageryEpoch {
      get { if ((_hasBits0 & 2) != 0) { return imageryEpoch_; } else { return ImageryEpochDefaultValue; } }
      set {
        _hasBits0 |= 2;
        imageryEpoch_ = value;
      }
    }
    /// <summary>Gets whether the "imagery_epoch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImageryEpoch {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "imagery_epoch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImageryEpoch() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NodeKey, other.NodeKey)) return false;
      if (TextureFormat != other.TextureFormat) return false;
      if (ImageryEpoch != other.ImageryEpoch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nodeKey_ != null) hash ^= NodeKey.GetHashCode();
      if (HasTextureFormat) hash ^= TextureFormat.GetHashCode();
      if (HasImageryEpoch) hash ^= ImageryEpoch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nodeKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeKey);
      }
      if (HasTextureFormat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TextureFormat);
      }
      if (HasImageryEpoch) {
        output.WriteRawTag(24);
        output.WriteUInt32(ImageryEpoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nodeKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeKey);
      }
      if (HasTextureFormat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TextureFormat);
      }
      if (HasImageryEpoch) {
        output.WriteRawTag(24);
        output.WriteUInt32(ImageryEpoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nodeKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeKey);
      }
      if (HasTextureFormat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TextureFormat);
      }
      if (HasImageryEpoch) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageryEpoch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.nodeKey_ != null) {
        if (nodeKey_ == null) {
          NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
        }
        NodeKey.MergeFrom(other.NodeKey);
      }
      if (other.HasTextureFormat) {
        TextureFormat = other.TextureFormat;
      }
      if (other.HasImageryEpoch) {
        ImageryEpoch = other.ImageryEpoch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nodeKey_ == null) {
              NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(NodeKey);
            break;
          }
          case 16: {
            TextureFormat = (global::GeoGlobetrotterProtoRocktree.Texture.Types.Format) input.ReadEnum();
            break;
          }
          case 24: {
            ImageryEpoch = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nodeKey_ == null) {
              NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(NodeKey);
            break;
          }
          case 16: {
            TextureFormat = (global::GeoGlobetrotterProtoRocktree.Texture.Types.Format) input.ReadEnum();
            break;
          }
          case 24: {
            ImageryEpoch = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NodeKey : pb::IMessage<NodeKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeKey> _parser = new pb::MessageParser<NodeKey>(() => new NodeKey());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeKey(NodeKey other) : this() {
      _hasBits0 = other._hasBits0;
      path_ = other.path_;
      epoch_ = other.epoch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeKey Clone() {
      return new NodeKey(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private readonly static string PathDefaultValue = "";

    private string path_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Path {
      get { return path_ ?? PathDefaultValue; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPath {
      get { return path_ != null; }
    }
    /// <summary>Clears the value of the "path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPath() {
      path_ = null;
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 2;
    private readonly static uint EpochDefaultValue = 0;

    private uint epoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Epoch {
      get { if ((_hasBits0 & 1) != 0) { return epoch_; } else { return EpochDefaultValue; } }
      set {
        _hasBits0 |= 1;
        epoch_ = value;
      }
    }
    /// <summary>Gets whether the "epoch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEpoch {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "epoch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEpoch() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (Epoch != other.Epoch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPath) hash ^= Path.GetHashCode();
      if (HasEpoch) hash ^= Epoch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPath) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (HasEpoch) {
        output.WriteRawTag(16);
        output.WriteUInt32(Epoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPath) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (HasEpoch) {
        output.WriteRawTag(16);
        output.WriteUInt32(Epoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (HasEpoch) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Epoch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeKey other) {
      if (other == null) {
        return;
      }
      if (other.HasPath) {
        Path = other.Path;
      }
      if (other.HasEpoch) {
        Epoch = other.Epoch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 16: {
            Epoch = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 16: {
            Epoch = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CopyrightRequest : pb::IMessage<CopyrightRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CopyrightRequest> _parser = new pb::MessageParser<CopyrightRequest>(() => new CopyrightRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CopyrightRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CopyrightRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CopyrightRequest(CopyrightRequest other) : this() {
      _hasBits0 = other._hasBits0;
      epoch_ = other.epoch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CopyrightRequest Clone() {
      return new CopyrightRequest(this);
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 1;
    private readonly static uint EpochDefaultValue = 0;

    private uint epoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Epoch {
      get { if ((_hasBits0 & 1) != 0) { return epoch_; } else { return EpochDefaultValue; } }
      set {
        _hasBits0 |= 1;
        epoch_ = value;
      }
    }
    /// <summary>Gets whether the "epoch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEpoch {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "epoch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEpoch() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CopyrightRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CopyrightRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Epoch != other.Epoch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEpoch) hash ^= Epoch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEpoch) {
        output.WriteRawTag(8);
        output.WriteUInt32(Epoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEpoch) {
        output.WriteRawTag(8);
        output.WriteUInt32(Epoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEpoch) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Epoch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CopyrightRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasEpoch) {
        Epoch = other.Epoch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Epoch = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Epoch = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TextureDataRequest : pb::IMessage<TextureDataRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextureDataRequest> _parser = new pb::MessageParser<TextureDataRequest>(() => new TextureDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextureDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextureDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextureDataRequest(TextureDataRequest other) : this() {
      _hasBits0 = other._hasBits0;
      nodeKey_ = other.nodeKey_ != null ? other.nodeKey_.Clone() : null;
      textureFormat_ = other.textureFormat_;
      viewDirection_ = other.viewDirection_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextureDataRequest Clone() {
      return new TextureDataRequest(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private global::GeoGlobetrotterProtoRocktree.NodeKey nodeKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.NodeKey NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = value;
      }
    }

    /// <summary>Field number for the "texture_format" field.</summary>
    public const int TextureFormatFieldNumber = 2;
    private readonly static global::GeoGlobetrotterProtoRocktree.Texture.Types.Format TextureFormatDefaultValue = global::GeoGlobetrotterProtoRocktree.Texture.Types.Format.Jpg;

    private global::GeoGlobetrotterProtoRocktree.Texture.Types.Format textureFormat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.Texture.Types.Format TextureFormat {
      get { if ((_hasBits0 & 1) != 0) { return textureFormat_; } else { return TextureFormatDefaultValue; } }
      set {
        _hasBits0 |= 1;
        textureFormat_ = value;
      }
    }
    /// <summary>Gets whether the "texture_format" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextureFormat {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "texture_format" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextureFormat() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "view_direction" field.</summary>
    public const int ViewDirectionFieldNumber = 3;
    private readonly static global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection ViewDirectionDefaultValue = global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection.Nadir;

    private global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection viewDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection ViewDirection {
      get { if ((_hasBits0 & 2) != 0) { return viewDirection_; } else { return ViewDirectionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        viewDirection_ = value;
      }
    }
    /// <summary>Gets whether the "view_direction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewDirection {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "view_direction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewDirection() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextureDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextureDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NodeKey, other.NodeKey)) return false;
      if (TextureFormat != other.TextureFormat) return false;
      if (ViewDirection != other.ViewDirection) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nodeKey_ != null) hash ^= NodeKey.GetHashCode();
      if (HasTextureFormat) hash ^= TextureFormat.GetHashCode();
      if (HasViewDirection) hash ^= ViewDirection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nodeKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeKey);
      }
      if (HasTextureFormat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TextureFormat);
      }
      if (HasViewDirection) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ViewDirection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nodeKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeKey);
      }
      if (HasTextureFormat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TextureFormat);
      }
      if (HasViewDirection) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ViewDirection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nodeKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeKey);
      }
      if (HasTextureFormat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TextureFormat);
      }
      if (HasViewDirection) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ViewDirection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextureDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.nodeKey_ != null) {
        if (nodeKey_ == null) {
          NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
        }
        NodeKey.MergeFrom(other.NodeKey);
      }
      if (other.HasTextureFormat) {
        TextureFormat = other.TextureFormat;
      }
      if (other.HasViewDirection) {
        ViewDirection = other.ViewDirection;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nodeKey_ == null) {
              NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(NodeKey);
            break;
          }
          case 16: {
            TextureFormat = (global::GeoGlobetrotterProtoRocktree.Texture.Types.Format) input.ReadEnum();
            break;
          }
          case 24: {
            ViewDirection = (global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nodeKey_ == null) {
              NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(NodeKey);
            break;
          }
          case 16: {
            TextureFormat = (global::GeoGlobetrotterProtoRocktree.Texture.Types.Format) input.ReadEnum();
            break;
          }
          case 24: {
            ViewDirection = (global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BulkMetadata : pb::IMessage<BulkMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BulkMetadata> _parser = new pb::MessageParser<BulkMetadata>(() => new BulkMetadata());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BulkMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulkMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulkMetadata(BulkMetadata other) : this() {
      _hasBits0 = other._hasBits0;
      nodeMetadata_ = other.nodeMetadata_.Clone();
      headNodeKey_ = other.headNodeKey_ != null ? other.headNodeKey_.Clone() : null;
      headNodeCenter_ = other.headNodeCenter_.Clone();
      metersPerTexel_ = other.metersPerTexel_.Clone();
      defaultImageryEpoch_ = other.defaultImageryEpoch_;
      defaultAvailableTextureFormats_ = other.defaultAvailableTextureFormats_;
      defaultAvailableViewDependentTextures_ = other.defaultAvailableViewDependentTextures_;
      defaultAvailableViewDependentTextureFormats_ = other.defaultAvailableViewDependentTextureFormats_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BulkMetadata Clone() {
      return new BulkMetadata(this);
    }

    /// <summary>Field number for the "node_metadata" field.</summary>
    public const int NodeMetadataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GeoGlobetrotterProtoRocktree.NodeMetadata> _repeated_nodeMetadata_codec
        = pb::FieldCodec.ForMessage(10, global::GeoGlobetrotterProtoRocktree.NodeMetadata.Parser);
    private readonly pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.NodeMetadata> nodeMetadata_ = new pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.NodeMetadata>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.NodeMetadata> NodeMetadata {
      get { return nodeMetadata_; }
    }

    /// <summary>Field number for the "head_node_key" field.</summary>
    public const int HeadNodeKeyFieldNumber = 2;
    private global::GeoGlobetrotterProtoRocktree.NodeKey headNodeKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.NodeKey HeadNodeKey {
      get { return headNodeKey_; }
      set {
        headNodeKey_ = value;
      }
    }

    /// <summary>Field number for the "head_node_center" field.</summary>
    public const int HeadNodeCenterFieldNumber = 3;
    private static readonly pb::FieldCodec<double> _repeated_headNodeCenter_codec
        = pb::FieldCodec.ForDouble(26);
    private readonly pbc::RepeatedField<double> headNodeCenter_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> HeadNodeCenter {
      get { return headNodeCenter_; }
    }

    /// <summary>Field number for the "meters_per_texel" field.</summary>
    public const int MetersPerTexelFieldNumber = 4;
    private static readonly pb::FieldCodec<float> _repeated_metersPerTexel_codec
        = pb::FieldCodec.ForFloat(34);
    private readonly pbc::RepeatedField<float> metersPerTexel_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<float> MetersPerTexel {
      get { return metersPerTexel_; }
    }

    /// <summary>Field number for the "default_imagery_epoch" field.</summary>
    public const int DefaultImageryEpochFieldNumber = 5;
    private readonly static uint DefaultImageryEpochDefaultValue = 0;

    private uint defaultImageryEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DefaultImageryEpoch {
      get { if ((_hasBits0 & 1) != 0) { return defaultImageryEpoch_; } else { return DefaultImageryEpochDefaultValue; } }
      set {
        _hasBits0 |= 1;
        defaultImageryEpoch_ = value;
      }
    }
    /// <summary>Gets whether the "default_imagery_epoch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultImageryEpoch {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "default_imagery_epoch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultImageryEpoch() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "default_available_texture_formats" field.</summary>
    public const int DefaultAvailableTextureFormatsFieldNumber = 6;
    private readonly static uint DefaultAvailableTextureFormatsDefaultValue = 0;

    private uint defaultAvailableTextureFormats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DefaultAvailableTextureFormats {
      get { if ((_hasBits0 & 2) != 0) { return defaultAvailableTextureFormats_; } else { return DefaultAvailableTextureFormatsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        defaultAvailableTextureFormats_ = value;
      }
    }
    /// <summary>Gets whether the "default_available_texture_formats" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultAvailableTextureFormats {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "default_available_texture_formats" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultAvailableTextureFormats() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "default_available_view_dependent_textures" field.</summary>
    public const int DefaultAvailableViewDependentTexturesFieldNumber = 7;
    private readonly static uint DefaultAvailableViewDependentTexturesDefaultValue = 0;

    private uint defaultAvailableViewDependentTextures_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DefaultAvailableViewDependentTextures {
      get { if ((_hasBits0 & 4) != 0) { return defaultAvailableViewDependentTextures_; } else { return DefaultAvailableViewDependentTexturesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        defaultAvailableViewDependentTextures_ = value;
      }
    }
    /// <summary>Gets whether the "default_available_view_dependent_textures" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultAvailableViewDependentTextures {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "default_available_view_dependent_textures" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultAvailableViewDependentTextures() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "default_available_view_dependent_texture_formats" field.</summary>
    public const int DefaultAvailableViewDependentTextureFormatsFieldNumber = 8;
    private readonly static uint DefaultAvailableViewDependentTextureFormatsDefaultValue = 0;

    private uint defaultAvailableViewDependentTextureFormats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DefaultAvailableViewDependentTextureFormats {
      get { if ((_hasBits0 & 8) != 0) { return defaultAvailableViewDependentTextureFormats_; } else { return DefaultAvailableViewDependentTextureFormatsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        defaultAvailableViewDependentTextureFormats_ = value;
      }
    }
    /// <summary>Gets whether the "default_available_view_dependent_texture_formats" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDefaultAvailableViewDependentTextureFormats {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "default_available_view_dependent_texture_formats" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefaultAvailableViewDependentTextureFormats() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BulkMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BulkMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodeMetadata_.Equals(other.nodeMetadata_)) return false;
      if (!object.Equals(HeadNodeKey, other.HeadNodeKey)) return false;
      if(!headNodeCenter_.Equals(other.headNodeCenter_)) return false;
      if(!metersPerTexel_.Equals(other.metersPerTexel_)) return false;
      if (DefaultImageryEpoch != other.DefaultImageryEpoch) return false;
      if (DefaultAvailableTextureFormats != other.DefaultAvailableTextureFormats) return false;
      if (DefaultAvailableViewDependentTextures != other.DefaultAvailableViewDependentTextures) return false;
      if (DefaultAvailableViewDependentTextureFormats != other.DefaultAvailableViewDependentTextureFormats) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodeMetadata_.GetHashCode();
      if (headNodeKey_ != null) hash ^= HeadNodeKey.GetHashCode();
      hash ^= headNodeCenter_.GetHashCode();
      hash ^= metersPerTexel_.GetHashCode();
      if (HasDefaultImageryEpoch) hash ^= DefaultImageryEpoch.GetHashCode();
      if (HasDefaultAvailableTextureFormats) hash ^= DefaultAvailableTextureFormats.GetHashCode();
      if (HasDefaultAvailableViewDependentTextures) hash ^= DefaultAvailableViewDependentTextures.GetHashCode();
      if (HasDefaultAvailableViewDependentTextureFormats) hash ^= DefaultAvailableViewDependentTextureFormats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      nodeMetadata_.WriteTo(output, _repeated_nodeMetadata_codec);
      if (headNodeKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HeadNodeKey);
      }
      headNodeCenter_.WriteTo(output, _repeated_headNodeCenter_codec);
      metersPerTexel_.WriteTo(output, _repeated_metersPerTexel_codec);
      if (HasDefaultImageryEpoch) {
        output.WriteRawTag(40);
        output.WriteUInt32(DefaultImageryEpoch);
      }
      if (HasDefaultAvailableTextureFormats) {
        output.WriteRawTag(48);
        output.WriteUInt32(DefaultAvailableTextureFormats);
      }
      if (HasDefaultAvailableViewDependentTextures) {
        output.WriteRawTag(56);
        output.WriteUInt32(DefaultAvailableViewDependentTextures);
      }
      if (HasDefaultAvailableViewDependentTextureFormats) {
        output.WriteRawTag(64);
        output.WriteUInt32(DefaultAvailableViewDependentTextureFormats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      nodeMetadata_.WriteTo(ref output, _repeated_nodeMetadata_codec);
      if (headNodeKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HeadNodeKey);
      }
      headNodeCenter_.WriteTo(ref output, _repeated_headNodeCenter_codec);
      metersPerTexel_.WriteTo(ref output, _repeated_metersPerTexel_codec);
      if (HasDefaultImageryEpoch) {
        output.WriteRawTag(40);
        output.WriteUInt32(DefaultImageryEpoch);
      }
      if (HasDefaultAvailableTextureFormats) {
        output.WriteRawTag(48);
        output.WriteUInt32(DefaultAvailableTextureFormats);
      }
      if (HasDefaultAvailableViewDependentTextures) {
        output.WriteRawTag(56);
        output.WriteUInt32(DefaultAvailableViewDependentTextures);
      }
      if (HasDefaultAvailableViewDependentTextureFormats) {
        output.WriteRawTag(64);
        output.WriteUInt32(DefaultAvailableViewDependentTextureFormats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += nodeMetadata_.CalculateSize(_repeated_nodeMetadata_codec);
      if (headNodeKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeadNodeKey);
      }
      size += headNodeCenter_.CalculateSize(_repeated_headNodeCenter_codec);
      size += metersPerTexel_.CalculateSize(_repeated_metersPerTexel_codec);
      if (HasDefaultImageryEpoch) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefaultImageryEpoch);
      }
      if (HasDefaultAvailableTextureFormats) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefaultAvailableTextureFormats);
      }
      if (HasDefaultAvailableViewDependentTextures) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefaultAvailableViewDependentTextures);
      }
      if (HasDefaultAvailableViewDependentTextureFormats) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefaultAvailableViewDependentTextureFormats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BulkMetadata other) {
      if (other == null) {
        return;
      }
      nodeMetadata_.Add(other.nodeMetadata_);
      if (other.headNodeKey_ != null) {
        if (headNodeKey_ == null) {
          HeadNodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
        }
        HeadNodeKey.MergeFrom(other.HeadNodeKey);
      }
      headNodeCenter_.Add(other.headNodeCenter_);
      metersPerTexel_.Add(other.metersPerTexel_);
      if (other.HasDefaultImageryEpoch) {
        DefaultImageryEpoch = other.DefaultImageryEpoch;
      }
      if (other.HasDefaultAvailableTextureFormats) {
        DefaultAvailableTextureFormats = other.DefaultAvailableTextureFormats;
      }
      if (other.HasDefaultAvailableViewDependentTextures) {
        DefaultAvailableViewDependentTextures = other.DefaultAvailableViewDependentTextures;
      }
      if (other.HasDefaultAvailableViewDependentTextureFormats) {
        DefaultAvailableViewDependentTextureFormats = other.DefaultAvailableViewDependentTextureFormats;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodeMetadata_.AddEntriesFrom(input, _repeated_nodeMetadata_codec);
            break;
          }
          case 18: {
            if (headNodeKey_ == null) {
              HeadNodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(HeadNodeKey);
            break;
          }
          case 26:
          case 25: {
            headNodeCenter_.AddEntriesFrom(input, _repeated_headNodeCenter_codec);
            break;
          }
          case 34:
          case 37: {
            metersPerTexel_.AddEntriesFrom(input, _repeated_metersPerTexel_codec);
            break;
          }
          case 40: {
            DefaultImageryEpoch = input.ReadUInt32();
            break;
          }
          case 48: {
            DefaultAvailableTextureFormats = input.ReadUInt32();
            break;
          }
          case 56: {
            DefaultAvailableViewDependentTextures = input.ReadUInt32();
            break;
          }
          case 64: {
            DefaultAvailableViewDependentTextureFormats = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            nodeMetadata_.AddEntriesFrom(ref input, _repeated_nodeMetadata_codec);
            break;
          }
          case 18: {
            if (headNodeKey_ == null) {
              HeadNodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(HeadNodeKey);
            break;
          }
          case 26:
          case 25: {
            headNodeCenter_.AddEntriesFrom(ref input, _repeated_headNodeCenter_codec);
            break;
          }
          case 34:
          case 37: {
            metersPerTexel_.AddEntriesFrom(ref input, _repeated_metersPerTexel_codec);
            break;
          }
          case 40: {
            DefaultImageryEpoch = input.ReadUInt32();
            break;
          }
          case 48: {
            DefaultAvailableTextureFormats = input.ReadUInt32();
            break;
          }
          case 56: {
            DefaultAvailableViewDependentTextures = input.ReadUInt32();
            break;
          }
          case 64: {
            DefaultAvailableViewDependentTextureFormats = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NodeMetadata : pb::IMessage<NodeMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeMetadata> _parser = new pb::MessageParser<NodeMetadata>(() => new NodeMetadata());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeMetadata(NodeMetadata other) : this() {
      _hasBits0 = other._hasBits0;
      pathAndFlags_ = other.pathAndFlags_;
      epoch_ = other.epoch_;
      bulkMetadataEpoch_ = other.bulkMetadataEpoch_;
      orientedBoundingBox_ = other.orientedBoundingBox_;
      metersPerTexel_ = other.metersPerTexel_;
      processingOrientedBoundingBox_ = other.processingOrientedBoundingBox_.Clone();
      imageryEpoch_ = other.imageryEpoch_;
      availableTextureFormats_ = other.availableTextureFormats_;
      availableViewDependentTextures_ = other.availableViewDependentTextures_;
      availableViewDependentTextureFormats_ = other.availableViewDependentTextureFormats_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeMetadata Clone() {
      return new NodeMetadata(this);
    }

    /// <summary>Field number for the "path_and_flags" field.</summary>
    public const int PathAndFlagsFieldNumber = 1;
    private readonly static uint PathAndFlagsDefaultValue = 0;

    private uint pathAndFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PathAndFlags {
      get { if ((_hasBits0 & 1) != 0) { return pathAndFlags_; } else { return PathAndFlagsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        pathAndFlags_ = value;
      }
    }
    /// <summary>Gets whether the "path_and_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPathAndFlags {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "path_and_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPathAndFlags() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 2;
    private readonly static uint EpochDefaultValue = 0;

    private uint epoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Epoch {
      get { if ((_hasBits0 & 2) != 0) { return epoch_; } else { return EpochDefaultValue; } }
      set {
        _hasBits0 |= 2;
        epoch_ = value;
      }
    }
    /// <summary>Gets whether the "epoch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEpoch {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "epoch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEpoch() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bulk_metadata_epoch" field.</summary>
    public const int BulkMetadataEpochFieldNumber = 5;
    private readonly static uint BulkMetadataEpochDefaultValue = 0;

    private uint bulkMetadataEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BulkMetadataEpoch {
      get { if ((_hasBits0 & 8) != 0) { return bulkMetadataEpoch_; } else { return BulkMetadataEpochDefaultValue; } }
      set {
        _hasBits0 |= 8;
        bulkMetadataEpoch_ = value;
      }
    }
    /// <summary>Gets whether the "bulk_metadata_epoch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBulkMetadataEpoch {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "bulk_metadata_epoch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBulkMetadataEpoch() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "oriented_bounding_box" field.</summary>
    public const int OrientedBoundingBoxFieldNumber = 3;
    private readonly static pb::ByteString OrientedBoundingBoxDefaultValue = pb::ByteString.Empty;

    private pb::ByteString orientedBoundingBox_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString OrientedBoundingBox {
      get { return orientedBoundingBox_ ?? OrientedBoundingBoxDefaultValue; }
      set {
        orientedBoundingBox_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "oriented_bounding_box" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrientedBoundingBox {
      get { return orientedBoundingBox_ != null; }
    }
    /// <summary>Clears the value of the "oriented_bounding_box" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrientedBoundingBox() {
      orientedBoundingBox_ = null;
    }

    /// <summary>Field number for the "meters_per_texel" field.</summary>
    public const int MetersPerTexelFieldNumber = 4;
    private readonly static float MetersPerTexelDefaultValue = 0F;

    private float metersPerTexel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MetersPerTexel {
      get { if ((_hasBits0 & 4) != 0) { return metersPerTexel_; } else { return MetersPerTexelDefaultValue; } }
      set {
        _hasBits0 |= 4;
        metersPerTexel_ = value;
      }
    }
    /// <summary>Gets whether the "meters_per_texel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMetersPerTexel {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "meters_per_texel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMetersPerTexel() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "processing_oriented_bounding_box" field.</summary>
    public const int ProcessingOrientedBoundingBoxFieldNumber = 6;
    private static readonly pb::FieldCodec<double> _repeated_processingOrientedBoundingBox_codec
        = pb::FieldCodec.ForDouble(50);
    private readonly pbc::RepeatedField<double> processingOrientedBoundingBox_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> ProcessingOrientedBoundingBox {
      get { return processingOrientedBoundingBox_; }
    }

    /// <summary>Field number for the "imagery_epoch" field.</summary>
    public const int ImageryEpochFieldNumber = 7;
    private readonly static uint ImageryEpochDefaultValue = 0;

    private uint imageryEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ImageryEpoch {
      get { if ((_hasBits0 & 16) != 0) { return imageryEpoch_; } else { return ImageryEpochDefaultValue; } }
      set {
        _hasBits0 |= 16;
        imageryEpoch_ = value;
      }
    }
    /// <summary>Gets whether the "imagery_epoch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImageryEpoch {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "imagery_epoch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImageryEpoch() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "available_texture_formats" field.</summary>
    public const int AvailableTextureFormatsFieldNumber = 8;
    private readonly static uint AvailableTextureFormatsDefaultValue = 0;

    private uint availableTextureFormats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AvailableTextureFormats {
      get { if ((_hasBits0 & 32) != 0) { return availableTextureFormats_; } else { return AvailableTextureFormatsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        availableTextureFormats_ = value;
      }
    }
    /// <summary>Gets whether the "available_texture_formats" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvailableTextureFormats {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "available_texture_formats" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvailableTextureFormats() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "available_view_dependent_textures" field.</summary>
    public const int AvailableViewDependentTexturesFieldNumber = 9;
    private readonly static uint AvailableViewDependentTexturesDefaultValue = 0;

    private uint availableViewDependentTextures_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AvailableViewDependentTextures {
      get { if ((_hasBits0 & 64) != 0) { return availableViewDependentTextures_; } else { return AvailableViewDependentTexturesDefaultValue; } }
      set {
        _hasBits0 |= 64;
        availableViewDependentTextures_ = value;
      }
    }
    /// <summary>Gets whether the "available_view_dependent_textures" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvailableViewDependentTextures {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "available_view_dependent_textures" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvailableViewDependentTextures() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "available_view_dependent_texture_formats" field.</summary>
    public const int AvailableViewDependentTextureFormatsFieldNumber = 10;
    private readonly static uint AvailableViewDependentTextureFormatsDefaultValue = 0;

    private uint availableViewDependentTextureFormats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AvailableViewDependentTextureFormats {
      get { if ((_hasBits0 & 128) != 0) { return availableViewDependentTextureFormats_; } else { return AvailableViewDependentTextureFormatsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        availableViewDependentTextureFormats_ = value;
      }
    }
    /// <summary>Gets whether the "available_view_dependent_texture_formats" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAvailableViewDependentTextureFormats {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "available_view_dependent_texture_formats" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAvailableViewDependentTextureFormats() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PathAndFlags != other.PathAndFlags) return false;
      if (Epoch != other.Epoch) return false;
      if (BulkMetadataEpoch != other.BulkMetadataEpoch) return false;
      if (OrientedBoundingBox != other.OrientedBoundingBox) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MetersPerTexel, other.MetersPerTexel)) return false;
      if(!processingOrientedBoundingBox_.Equals(other.processingOrientedBoundingBox_)) return false;
      if (ImageryEpoch != other.ImageryEpoch) return false;
      if (AvailableTextureFormats != other.AvailableTextureFormats) return false;
      if (AvailableViewDependentTextures != other.AvailableViewDependentTextures) return false;
      if (AvailableViewDependentTextureFormats != other.AvailableViewDependentTextureFormats) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPathAndFlags) hash ^= PathAndFlags.GetHashCode();
      if (HasEpoch) hash ^= Epoch.GetHashCode();
      if (HasBulkMetadataEpoch) hash ^= BulkMetadataEpoch.GetHashCode();
      if (HasOrientedBoundingBox) hash ^= OrientedBoundingBox.GetHashCode();
      if (HasMetersPerTexel) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MetersPerTexel);
      hash ^= processingOrientedBoundingBox_.GetHashCode();
      if (HasImageryEpoch) hash ^= ImageryEpoch.GetHashCode();
      if (HasAvailableTextureFormats) hash ^= AvailableTextureFormats.GetHashCode();
      if (HasAvailableViewDependentTextures) hash ^= AvailableViewDependentTextures.GetHashCode();
      if (HasAvailableViewDependentTextureFormats) hash ^= AvailableViewDependentTextureFormats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPathAndFlags) {
        output.WriteRawTag(8);
        output.WriteUInt32(PathAndFlags);
      }
      if (HasEpoch) {
        output.WriteRawTag(16);
        output.WriteUInt32(Epoch);
      }
      if (HasOrientedBoundingBox) {
        output.WriteRawTag(26);
        output.WriteBytes(OrientedBoundingBox);
      }
      if (HasMetersPerTexel) {
        output.WriteRawTag(37);
        output.WriteFloat(MetersPerTexel);
      }
      if (HasBulkMetadataEpoch) {
        output.WriteRawTag(40);
        output.WriteUInt32(BulkMetadataEpoch);
      }
      processingOrientedBoundingBox_.WriteTo(output, _repeated_processingOrientedBoundingBox_codec);
      if (HasImageryEpoch) {
        output.WriteRawTag(56);
        output.WriteUInt32(ImageryEpoch);
      }
      if (HasAvailableTextureFormats) {
        output.WriteRawTag(64);
        output.WriteUInt32(AvailableTextureFormats);
      }
      if (HasAvailableViewDependentTextures) {
        output.WriteRawTag(72);
        output.WriteUInt32(AvailableViewDependentTextures);
      }
      if (HasAvailableViewDependentTextureFormats) {
        output.WriteRawTag(80);
        output.WriteUInt32(AvailableViewDependentTextureFormats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPathAndFlags) {
        output.WriteRawTag(8);
        output.WriteUInt32(PathAndFlags);
      }
      if (HasEpoch) {
        output.WriteRawTag(16);
        output.WriteUInt32(Epoch);
      }
      if (HasOrientedBoundingBox) {
        output.WriteRawTag(26);
        output.WriteBytes(OrientedBoundingBox);
      }
      if (HasMetersPerTexel) {
        output.WriteRawTag(37);
        output.WriteFloat(MetersPerTexel);
      }
      if (HasBulkMetadataEpoch) {
        output.WriteRawTag(40);
        output.WriteUInt32(BulkMetadataEpoch);
      }
      processingOrientedBoundingBox_.WriteTo(ref output, _repeated_processingOrientedBoundingBox_codec);
      if (HasImageryEpoch) {
        output.WriteRawTag(56);
        output.WriteUInt32(ImageryEpoch);
      }
      if (HasAvailableTextureFormats) {
        output.WriteRawTag(64);
        output.WriteUInt32(AvailableTextureFormats);
      }
      if (HasAvailableViewDependentTextures) {
        output.WriteRawTag(72);
        output.WriteUInt32(AvailableViewDependentTextures);
      }
      if (HasAvailableViewDependentTextureFormats) {
        output.WriteRawTag(80);
        output.WriteUInt32(AvailableViewDependentTextureFormats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPathAndFlags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PathAndFlags);
      }
      if (HasEpoch) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Epoch);
      }
      if (HasBulkMetadataEpoch) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BulkMetadataEpoch);
      }
      if (HasOrientedBoundingBox) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrientedBoundingBox);
      }
      if (HasMetersPerTexel) {
        size += 1 + 4;
      }
      size += processingOrientedBoundingBox_.CalculateSize(_repeated_processingOrientedBoundingBox_codec);
      if (HasImageryEpoch) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageryEpoch);
      }
      if (HasAvailableTextureFormats) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvailableTextureFormats);
      }
      if (HasAvailableViewDependentTextures) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvailableViewDependentTextures);
      }
      if (HasAvailableViewDependentTextureFormats) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AvailableViewDependentTextureFormats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeMetadata other) {
      if (other == null) {
        return;
      }
      if (other.HasPathAndFlags) {
        PathAndFlags = other.PathAndFlags;
      }
      if (other.HasEpoch) {
        Epoch = other.Epoch;
      }
      if (other.HasBulkMetadataEpoch) {
        BulkMetadataEpoch = other.BulkMetadataEpoch;
      }
      if (other.HasOrientedBoundingBox) {
        OrientedBoundingBox = other.OrientedBoundingBox;
      }
      if (other.HasMetersPerTexel) {
        MetersPerTexel = other.MetersPerTexel;
      }
      processingOrientedBoundingBox_.Add(other.processingOrientedBoundingBox_);
      if (other.HasImageryEpoch) {
        ImageryEpoch = other.ImageryEpoch;
      }
      if (other.HasAvailableTextureFormats) {
        AvailableTextureFormats = other.AvailableTextureFormats;
      }
      if (other.HasAvailableViewDependentTextures) {
        AvailableViewDependentTextures = other.AvailableViewDependentTextures;
      }
      if (other.HasAvailableViewDependentTextureFormats) {
        AvailableViewDependentTextureFormats = other.AvailableViewDependentTextureFormats;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PathAndFlags = input.ReadUInt32();
            break;
          }
          case 16: {
            Epoch = input.ReadUInt32();
            break;
          }
          case 26: {
            OrientedBoundingBox = input.ReadBytes();
            break;
          }
          case 37: {
            MetersPerTexel = input.ReadFloat();
            break;
          }
          case 40: {
            BulkMetadataEpoch = input.ReadUInt32();
            break;
          }
          case 50:
          case 49: {
            processingOrientedBoundingBox_.AddEntriesFrom(input, _repeated_processingOrientedBoundingBox_codec);
            break;
          }
          case 56: {
            ImageryEpoch = input.ReadUInt32();
            break;
          }
          case 64: {
            AvailableTextureFormats = input.ReadUInt32();
            break;
          }
          case 72: {
            AvailableViewDependentTextures = input.ReadUInt32();
            break;
          }
          case 80: {
            AvailableViewDependentTextureFormats = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PathAndFlags = input.ReadUInt32();
            break;
          }
          case 16: {
            Epoch = input.ReadUInt32();
            break;
          }
          case 26: {
            OrientedBoundingBox = input.ReadBytes();
            break;
          }
          case 37: {
            MetersPerTexel = input.ReadFloat();
            break;
          }
          case 40: {
            BulkMetadataEpoch = input.ReadUInt32();
            break;
          }
          case 50:
          case 49: {
            processingOrientedBoundingBox_.AddEntriesFrom(ref input, _repeated_processingOrientedBoundingBox_codec);
            break;
          }
          case 56: {
            ImageryEpoch = input.ReadUInt32();
            break;
          }
          case 64: {
            AvailableTextureFormats = input.ReadUInt32();
            break;
          }
          case 72: {
            AvailableViewDependentTextures = input.ReadUInt32();
            break;
          }
          case 80: {
            AvailableViewDependentTextureFormats = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the NodeMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Flags {
        [pbr::OriginalName("RICH3D_LEAF")] Rich3DLeaf = 1,
        [pbr::OriginalName("RICH3D_NODATA")] Rich3DNodata = 2,
        [pbr::OriginalName("LEAF")] Leaf = 4,
        [pbr::OriginalName("NODATA")] Nodata = 8,
        [pbr::OriginalName("USE_IMAGERY_EPOCH")] UseImageryEpoch = 16,
      }

    }
    #endregion

  }

  public sealed partial class NodeData : pb::IMessage<NodeData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeData> _parser = new pb::MessageParser<NodeData>(() => new NodeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeData(NodeData other) : this() {
      matrixGlobeFromMesh_ = other.matrixGlobeFromMesh_.Clone();
      meshes_ = other.meshes_.Clone();
      copyrightIds_ = other.copyrightIds_.Clone();
      nodeKey_ = other.nodeKey_ != null ? other.nodeKey_.Clone() : null;
      kmlBoundingBox_ = other.kmlBoundingBox_.Clone();
      waterMesh_ = other.waterMesh_ != null ? other.waterMesh_.Clone() : null;
      overlaySurfaceMeshes_ = other.overlaySurfaceMeshes_.Clone();
      forNormals_ = other.forNormals_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeData Clone() {
      return new NodeData(this);
    }

    /// <summary>Field number for the "matrix_globe_from_mesh" field.</summary>
    public const int MatrixGlobeFromMeshFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_matrixGlobeFromMesh_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> matrixGlobeFromMesh_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> MatrixGlobeFromMesh {
      get { return matrixGlobeFromMesh_; }
    }

    /// <summary>Field number for the "meshes" field.</summary>
    public const int MeshesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GeoGlobetrotterProtoRocktree.Mesh> _repeated_meshes_codec
        = pb::FieldCodec.ForMessage(18, global::GeoGlobetrotterProtoRocktree.Mesh.Parser);
    private readonly pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Mesh> meshes_ = new pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Mesh>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Mesh> Meshes {
      get { return meshes_; }
    }

    /// <summary>Field number for the "copyright_ids" field.</summary>
    public const int CopyrightIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_copyrightIds_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> copyrightIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> CopyrightIds {
      get { return copyrightIds_; }
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 4;
    private global::GeoGlobetrotterProtoRocktree.NodeKey nodeKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.NodeKey NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = value;
      }
    }

    /// <summary>Field number for the "kml_bounding_box" field.</summary>
    public const int KmlBoundingBoxFieldNumber = 5;
    private static readonly pb::FieldCodec<double> _repeated_kmlBoundingBox_codec
        = pb::FieldCodec.ForDouble(42);
    private readonly pbc::RepeatedField<double> kmlBoundingBox_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> KmlBoundingBox {
      get { return kmlBoundingBox_; }
    }

    /// <summary>Field number for the "water_mesh" field.</summary>
    public const int WaterMeshFieldNumber = 6;
    private global::GeoGlobetrotterProtoRocktree.Mesh waterMesh_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.Mesh WaterMesh {
      get { return waterMesh_; }
      set {
        waterMesh_ = value;
      }
    }

    /// <summary>Field number for the "overlay_surface_meshes" field.</summary>
    public const int OverlaySurfaceMeshesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::GeoGlobetrotterProtoRocktree.Mesh> _repeated_overlaySurfaceMeshes_codec
        = pb::FieldCodec.ForMessage(58, global::GeoGlobetrotterProtoRocktree.Mesh.Parser);
    private readonly pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Mesh> overlaySurfaceMeshes_ = new pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Mesh>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Mesh> OverlaySurfaceMeshes {
      get { return overlaySurfaceMeshes_; }
    }

    /// <summary>Field number for the "for_normals" field.</summary>
    public const int ForNormalsFieldNumber = 8;
    private readonly static pb::ByteString ForNormalsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString forNormals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ForNormals {
      get { return forNormals_ ?? ForNormalsDefaultValue; }
      set {
        forNormals_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "for_normals" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForNormals {
      get { return forNormals_ != null; }
    }
    /// <summary>Clears the value of the "for_normals" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForNormals() {
      forNormals_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!matrixGlobeFromMesh_.Equals(other.matrixGlobeFromMesh_)) return false;
      if(!meshes_.Equals(other.meshes_)) return false;
      if(!copyrightIds_.Equals(other.copyrightIds_)) return false;
      if (!object.Equals(NodeKey, other.NodeKey)) return false;
      if(!kmlBoundingBox_.Equals(other.kmlBoundingBox_)) return false;
      if (!object.Equals(WaterMesh, other.WaterMesh)) return false;
      if(!overlaySurfaceMeshes_.Equals(other.overlaySurfaceMeshes_)) return false;
      if (ForNormals != other.ForNormals) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= matrixGlobeFromMesh_.GetHashCode();
      hash ^= meshes_.GetHashCode();
      hash ^= copyrightIds_.GetHashCode();
      if (nodeKey_ != null) hash ^= NodeKey.GetHashCode();
      hash ^= kmlBoundingBox_.GetHashCode();
      if (waterMesh_ != null) hash ^= WaterMesh.GetHashCode();
      hash ^= overlaySurfaceMeshes_.GetHashCode();
      if (HasForNormals) hash ^= ForNormals.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      matrixGlobeFromMesh_.WriteTo(output, _repeated_matrixGlobeFromMesh_codec);
      meshes_.WriteTo(output, _repeated_meshes_codec);
      copyrightIds_.WriteTo(output, _repeated_copyrightIds_codec);
      if (nodeKey_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NodeKey);
      }
      kmlBoundingBox_.WriteTo(output, _repeated_kmlBoundingBox_codec);
      if (waterMesh_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(WaterMesh);
      }
      overlaySurfaceMeshes_.WriteTo(output, _repeated_overlaySurfaceMeshes_codec);
      if (HasForNormals) {
        output.WriteRawTag(66);
        output.WriteBytes(ForNormals);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      matrixGlobeFromMesh_.WriteTo(ref output, _repeated_matrixGlobeFromMesh_codec);
      meshes_.WriteTo(ref output, _repeated_meshes_codec);
      copyrightIds_.WriteTo(ref output, _repeated_copyrightIds_codec);
      if (nodeKey_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NodeKey);
      }
      kmlBoundingBox_.WriteTo(ref output, _repeated_kmlBoundingBox_codec);
      if (waterMesh_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(WaterMesh);
      }
      overlaySurfaceMeshes_.WriteTo(ref output, _repeated_overlaySurfaceMeshes_codec);
      if (HasForNormals) {
        output.WriteRawTag(66);
        output.WriteBytes(ForNormals);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += matrixGlobeFromMesh_.CalculateSize(_repeated_matrixGlobeFromMesh_codec);
      size += meshes_.CalculateSize(_repeated_meshes_codec);
      size += copyrightIds_.CalculateSize(_repeated_copyrightIds_codec);
      if (nodeKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeKey);
      }
      size += kmlBoundingBox_.CalculateSize(_repeated_kmlBoundingBox_codec);
      if (waterMesh_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WaterMesh);
      }
      size += overlaySurfaceMeshes_.CalculateSize(_repeated_overlaySurfaceMeshes_codec);
      if (HasForNormals) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ForNormals);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeData other) {
      if (other == null) {
        return;
      }
      matrixGlobeFromMesh_.Add(other.matrixGlobeFromMesh_);
      meshes_.Add(other.meshes_);
      copyrightIds_.Add(other.copyrightIds_);
      if (other.nodeKey_ != null) {
        if (nodeKey_ == null) {
          NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
        }
        NodeKey.MergeFrom(other.NodeKey);
      }
      kmlBoundingBox_.Add(other.kmlBoundingBox_);
      if (other.waterMesh_ != null) {
        if (waterMesh_ == null) {
          WaterMesh = new global::GeoGlobetrotterProtoRocktree.Mesh();
        }
        WaterMesh.MergeFrom(other.WaterMesh);
      }
      overlaySurfaceMeshes_.Add(other.overlaySurfaceMeshes_);
      if (other.HasForNormals) {
        ForNormals = other.ForNormals;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            matrixGlobeFromMesh_.AddEntriesFrom(input, _repeated_matrixGlobeFromMesh_codec);
            break;
          }
          case 18: {
            meshes_.AddEntriesFrom(input, _repeated_meshes_codec);
            break;
          }
          case 26:
          case 24: {
            copyrightIds_.AddEntriesFrom(input, _repeated_copyrightIds_codec);
            break;
          }
          case 34: {
            if (nodeKey_ == null) {
              NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(NodeKey);
            break;
          }
          case 42:
          case 41: {
            kmlBoundingBox_.AddEntriesFrom(input, _repeated_kmlBoundingBox_codec);
            break;
          }
          case 50: {
            if (waterMesh_ == null) {
              WaterMesh = new global::GeoGlobetrotterProtoRocktree.Mesh();
            }
            input.ReadMessage(WaterMesh);
            break;
          }
          case 58: {
            overlaySurfaceMeshes_.AddEntriesFrom(input, _repeated_overlaySurfaceMeshes_codec);
            break;
          }
          case 66: {
            ForNormals = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            matrixGlobeFromMesh_.AddEntriesFrom(ref input, _repeated_matrixGlobeFromMesh_codec);
            break;
          }
          case 18: {
            meshes_.AddEntriesFrom(ref input, _repeated_meshes_codec);
            break;
          }
          case 26:
          case 24: {
            copyrightIds_.AddEntriesFrom(ref input, _repeated_copyrightIds_codec);
            break;
          }
          case 34: {
            if (nodeKey_ == null) {
              NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(NodeKey);
            break;
          }
          case 42:
          case 41: {
            kmlBoundingBox_.AddEntriesFrom(ref input, _repeated_kmlBoundingBox_codec);
            break;
          }
          case 50: {
            if (waterMesh_ == null) {
              WaterMesh = new global::GeoGlobetrotterProtoRocktree.Mesh();
            }
            input.ReadMessage(WaterMesh);
            break;
          }
          case 58: {
            overlaySurfaceMeshes_.AddEntriesFrom(ref input, _repeated_overlaySurfaceMeshes_codec);
            break;
          }
          case 66: {
            ForNormals = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Mesh : pb::IMessage<Mesh>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Mesh> _parser = new pb::MessageParser<Mesh>(() => new Mesh());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Mesh> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mesh() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mesh(Mesh other) : this() {
      _hasBits0 = other._hasBits0;
      vertices_ = other.vertices_;
      vertexAlphas_ = other.vertexAlphas_;
      textureCoords_ = other.textureCoords_;
      indices_ = other.indices_;
      octantRanges_ = other.octantRanges_;
      layerCounts_ = other.layerCounts_;
      texture_ = other.texture_.Clone();
      textureCoordinates_ = other.textureCoordinates_;
      uvOffsetAndScale_ = other.uvOffsetAndScale_.Clone();
      layerAndOctantCounts_ = other.layerAndOctantCounts_;
      normals_ = other.normals_;
      normalsDev_ = other.normalsDev_;
      meshId_ = other.meshId_;
      skirtFlags_ = other.skirtFlags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mesh Clone() {
      return new Mesh(this);
    }

    /// <summary>Field number for the "vertices" field.</summary>
    public const int VerticesFieldNumber = 1;
    private readonly static pb::ByteString VerticesDefaultValue = pb::ByteString.Empty;

    private pb::ByteString vertices_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Vertices {
      get { return vertices_ ?? VerticesDefaultValue; }
      set {
        vertices_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "vertices" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVertices {
      get { return vertices_ != null; }
    }
    /// <summary>Clears the value of the "vertices" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVertices() {
      vertices_ = null;
    }

    /// <summary>Field number for the "vertex_alphas" field.</summary>
    public const int VertexAlphasFieldNumber = 9;
    private readonly static pb::ByteString VertexAlphasDefaultValue = pb::ByteString.Empty;

    private pb::ByteString vertexAlphas_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString VertexAlphas {
      get { return vertexAlphas_ ?? VertexAlphasDefaultValue; }
      set {
        vertexAlphas_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "vertex_alphas" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVertexAlphas {
      get { return vertexAlphas_ != null; }
    }
    /// <summary>Clears the value of the "vertex_alphas" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVertexAlphas() {
      vertexAlphas_ = null;
    }

    /// <summary>Field number for the "texture_coords" field.</summary>
    public const int TextureCoordsFieldNumber = 2;
    private readonly static pb::ByteString TextureCoordsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString textureCoords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TextureCoords {
      get { return textureCoords_ ?? TextureCoordsDefaultValue; }
      set {
        textureCoords_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "texture_coords" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextureCoords {
      get { return textureCoords_ != null; }
    }
    /// <summary>Clears the value of the "texture_coords" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextureCoords() {
      textureCoords_ = null;
    }

    /// <summary>Field number for the "indices" field.</summary>
    public const int IndicesFieldNumber = 3;
    private readonly static pb::ByteString IndicesDefaultValue = pb::ByteString.Empty;

    private pb::ByteString indices_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Indices {
      get { return indices_ ?? IndicesDefaultValue; }
      set {
        indices_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "indices" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIndices {
      get { return indices_ != null; }
    }
    /// <summary>Clears the value of the "indices" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIndices() {
      indices_ = null;
    }

    /// <summary>Field number for the "octant_ranges" field.</summary>
    public const int OctantRangesFieldNumber = 4;
    private readonly static pb::ByteString OctantRangesDefaultValue = pb::ByteString.Empty;

    private pb::ByteString octantRanges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString OctantRanges {
      get { return octantRanges_ ?? OctantRangesDefaultValue; }
      set {
        octantRanges_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "octant_ranges" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOctantRanges {
      get { return octantRanges_ != null; }
    }
    /// <summary>Clears the value of the "octant_ranges" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOctantRanges() {
      octantRanges_ = null;
    }

    /// <summary>Field number for the "layer_counts" field.</summary>
    public const int LayerCountsFieldNumber = 5;
    private readonly static pb::ByteString LayerCountsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString layerCounts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString LayerCounts {
      get { return layerCounts_ ?? LayerCountsDefaultValue; }
      set {
        layerCounts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "layer_counts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLayerCounts {
      get { return layerCounts_ != null; }
    }
    /// <summary>Clears the value of the "layer_counts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLayerCounts() {
      layerCounts_ = null;
    }

    /// <summary>Field number for the "texture" field.</summary>
    public const int TextureFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GeoGlobetrotterProtoRocktree.Texture> _repeated_texture_codec
        = pb::FieldCodec.ForMessage(50, global::GeoGlobetrotterProtoRocktree.Texture.Parser);
    private readonly pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Texture> texture_ = new pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Texture>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Texture> Texture {
      get { return texture_; }
    }

    /// <summary>Field number for the "texture_coordinates" field.</summary>
    public const int TextureCoordinatesFieldNumber = 7;
    private readonly static pb::ByteString TextureCoordinatesDefaultValue = pb::ByteString.Empty;

    private pb::ByteString textureCoordinates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TextureCoordinates {
      get { return textureCoordinates_ ?? TextureCoordinatesDefaultValue; }
      set {
        textureCoordinates_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "texture_coordinates" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextureCoordinates {
      get { return textureCoordinates_ != null; }
    }
    /// <summary>Clears the value of the "texture_coordinates" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextureCoordinates() {
      textureCoordinates_ = null;
    }

    /// <summary>Field number for the "uv_offset_and_scale" field.</summary>
    public const int UvOffsetAndScaleFieldNumber = 10;
    private static readonly pb::FieldCodec<float> _repeated_uvOffsetAndScale_codec
        = pb::FieldCodec.ForFloat(82);
    private readonly pbc::RepeatedField<float> uvOffsetAndScale_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<float> UvOffsetAndScale {
      get { return uvOffsetAndScale_; }
    }

    /// <summary>Field number for the "layer_and_octant_counts" field.</summary>
    public const int LayerAndOctantCountsFieldNumber = 8;
    private readonly static pb::ByteString LayerAndOctantCountsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString layerAndOctantCounts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString LayerAndOctantCounts {
      get { return layerAndOctantCounts_ ?? LayerAndOctantCountsDefaultValue; }
      set {
        layerAndOctantCounts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "layer_and_octant_counts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLayerAndOctantCounts {
      get { return layerAndOctantCounts_ != null; }
    }
    /// <summary>Clears the value of the "layer_and_octant_counts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLayerAndOctantCounts() {
      layerAndOctantCounts_ = null;
    }

    /// <summary>Field number for the "normals" field.</summary>
    public const int NormalsFieldNumber = 11;
    private readonly static pb::ByteString NormalsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString normals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Normals {
      get { return normals_ ?? NormalsDefaultValue; }
      set {
        normals_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "normals" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNormals {
      get { return normals_ != null; }
    }
    /// <summary>Clears the value of the "normals" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNormals() {
      normals_ = null;
    }

    /// <summary>Field number for the "normals_dev" field.</summary>
    public const int NormalsDevFieldNumber = 16;
    private readonly static pb::ByteString NormalsDevDefaultValue = pb::ByteString.Empty;

    private pb::ByteString normalsDev_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString NormalsDev {
      get { return normalsDev_ ?? NormalsDevDefaultValue; }
      set {
        normalsDev_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "normals_dev" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNormalsDev {
      get { return normalsDev_ != null; }
    }
    /// <summary>Clears the value of the "normals_dev" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNormalsDev() {
      normalsDev_ = null;
    }

    /// <summary>Field number for the "mesh_id" field.</summary>
    public const int MeshIdFieldNumber = 12;
    private readonly static uint MeshIdDefaultValue = 0;

    private uint meshId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MeshId {
      get { if ((_hasBits0 & 1) != 0) { return meshId_; } else { return MeshIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        meshId_ = value;
      }
    }
    /// <summary>Gets whether the "mesh_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMeshId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "mesh_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMeshId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "skirt_flags" field.</summary>
    public const int SkirtFlagsFieldNumber = 13;
    private readonly static pb::ByteString SkirtFlagsDefaultValue = pb::ByteString.Empty;

    private pb::ByteString skirtFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SkirtFlags {
      get { return skirtFlags_ ?? SkirtFlagsDefaultValue; }
      set {
        skirtFlags_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "skirt_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSkirtFlags {
      get { return skirtFlags_ != null; }
    }
    /// <summary>Clears the value of the "skirt_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSkirtFlags() {
      skirtFlags_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Mesh);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Mesh other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Vertices != other.Vertices) return false;
      if (VertexAlphas != other.VertexAlphas) return false;
      if (TextureCoords != other.TextureCoords) return false;
      if (Indices != other.Indices) return false;
      if (OctantRanges != other.OctantRanges) return false;
      if (LayerCounts != other.LayerCounts) return false;
      if(!texture_.Equals(other.texture_)) return false;
      if (TextureCoordinates != other.TextureCoordinates) return false;
      if(!uvOffsetAndScale_.Equals(other.uvOffsetAndScale_)) return false;
      if (LayerAndOctantCounts != other.LayerAndOctantCounts) return false;
      if (Normals != other.Normals) return false;
      if (NormalsDev != other.NormalsDev) return false;
      if (MeshId != other.MeshId) return false;
      if (SkirtFlags != other.SkirtFlags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVertices) hash ^= Vertices.GetHashCode();
      if (HasVertexAlphas) hash ^= VertexAlphas.GetHashCode();
      if (HasTextureCoords) hash ^= TextureCoords.GetHashCode();
      if (HasIndices) hash ^= Indices.GetHashCode();
      if (HasOctantRanges) hash ^= OctantRanges.GetHashCode();
      if (HasLayerCounts) hash ^= LayerCounts.GetHashCode();
      hash ^= texture_.GetHashCode();
      if (HasTextureCoordinates) hash ^= TextureCoordinates.GetHashCode();
      hash ^= uvOffsetAndScale_.GetHashCode();
      if (HasLayerAndOctantCounts) hash ^= LayerAndOctantCounts.GetHashCode();
      if (HasNormals) hash ^= Normals.GetHashCode();
      if (HasNormalsDev) hash ^= NormalsDev.GetHashCode();
      if (HasMeshId) hash ^= MeshId.GetHashCode();
      if (HasSkirtFlags) hash ^= SkirtFlags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVertices) {
        output.WriteRawTag(10);
        output.WriteBytes(Vertices);
      }
      if (HasTextureCoords) {
        output.WriteRawTag(18);
        output.WriteBytes(TextureCoords);
      }
      if (HasIndices) {
        output.WriteRawTag(26);
        output.WriteBytes(Indices);
      }
      if (HasOctantRanges) {
        output.WriteRawTag(34);
        output.WriteBytes(OctantRanges);
      }
      if (HasLayerCounts) {
        output.WriteRawTag(42);
        output.WriteBytes(LayerCounts);
      }
      texture_.WriteTo(output, _repeated_texture_codec);
      if (HasTextureCoordinates) {
        output.WriteRawTag(58);
        output.WriteBytes(TextureCoordinates);
      }
      if (HasLayerAndOctantCounts) {
        output.WriteRawTag(66);
        output.WriteBytes(LayerAndOctantCounts);
      }
      if (HasVertexAlphas) {
        output.WriteRawTag(74);
        output.WriteBytes(VertexAlphas);
      }
      uvOffsetAndScale_.WriteTo(output, _repeated_uvOffsetAndScale_codec);
      if (HasNormals) {
        output.WriteRawTag(90);
        output.WriteBytes(Normals);
      }
      if (HasMeshId) {
        output.WriteRawTag(96);
        output.WriteUInt32(MeshId);
      }
      if (HasSkirtFlags) {
        output.WriteRawTag(106);
        output.WriteBytes(SkirtFlags);
      }
      if (HasNormalsDev) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(NormalsDev);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVertices) {
        output.WriteRawTag(10);
        output.WriteBytes(Vertices);
      }
      if (HasTextureCoords) {
        output.WriteRawTag(18);
        output.WriteBytes(TextureCoords);
      }
      if (HasIndices) {
        output.WriteRawTag(26);
        output.WriteBytes(Indices);
      }
      if (HasOctantRanges) {
        output.WriteRawTag(34);
        output.WriteBytes(OctantRanges);
      }
      if (HasLayerCounts) {
        output.WriteRawTag(42);
        output.WriteBytes(LayerCounts);
      }
      texture_.WriteTo(ref output, _repeated_texture_codec);
      if (HasTextureCoordinates) {
        output.WriteRawTag(58);
        output.WriteBytes(TextureCoordinates);
      }
      if (HasLayerAndOctantCounts) {
        output.WriteRawTag(66);
        output.WriteBytes(LayerAndOctantCounts);
      }
      if (HasVertexAlphas) {
        output.WriteRawTag(74);
        output.WriteBytes(VertexAlphas);
      }
      uvOffsetAndScale_.WriteTo(ref output, _repeated_uvOffsetAndScale_codec);
      if (HasNormals) {
        output.WriteRawTag(90);
        output.WriteBytes(Normals);
      }
      if (HasMeshId) {
        output.WriteRawTag(96);
        output.WriteUInt32(MeshId);
      }
      if (HasSkirtFlags) {
        output.WriteRawTag(106);
        output.WriteBytes(SkirtFlags);
      }
      if (HasNormalsDev) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(NormalsDev);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasVertices) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Vertices);
      }
      if (HasVertexAlphas) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(VertexAlphas);
      }
      if (HasTextureCoords) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TextureCoords);
      }
      if (HasIndices) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Indices);
      }
      if (HasOctantRanges) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OctantRanges);
      }
      if (HasLayerCounts) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LayerCounts);
      }
      size += texture_.CalculateSize(_repeated_texture_codec);
      if (HasTextureCoordinates) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TextureCoordinates);
      }
      size += uvOffsetAndScale_.CalculateSize(_repeated_uvOffsetAndScale_codec);
      if (HasLayerAndOctantCounts) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(LayerAndOctantCounts);
      }
      if (HasNormals) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Normals);
      }
      if (HasNormalsDev) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(NormalsDev);
      }
      if (HasMeshId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MeshId);
      }
      if (HasSkirtFlags) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SkirtFlags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Mesh other) {
      if (other == null) {
        return;
      }
      if (other.HasVertices) {
        Vertices = other.Vertices;
      }
      if (other.HasVertexAlphas) {
        VertexAlphas = other.VertexAlphas;
      }
      if (other.HasTextureCoords) {
        TextureCoords = other.TextureCoords;
      }
      if (other.HasIndices) {
        Indices = other.Indices;
      }
      if (other.HasOctantRanges) {
        OctantRanges = other.OctantRanges;
      }
      if (other.HasLayerCounts) {
        LayerCounts = other.LayerCounts;
      }
      texture_.Add(other.texture_);
      if (other.HasTextureCoordinates) {
        TextureCoordinates = other.TextureCoordinates;
      }
      uvOffsetAndScale_.Add(other.uvOffsetAndScale_);
      if (other.HasLayerAndOctantCounts) {
        LayerAndOctantCounts = other.LayerAndOctantCounts;
      }
      if (other.HasNormals) {
        Normals = other.Normals;
      }
      if (other.HasNormalsDev) {
        NormalsDev = other.NormalsDev;
      }
      if (other.HasMeshId) {
        MeshId = other.MeshId;
      }
      if (other.HasSkirtFlags) {
        SkirtFlags = other.SkirtFlags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Vertices = input.ReadBytes();
            break;
          }
          case 18: {
            TextureCoords = input.ReadBytes();
            break;
          }
          case 26: {
            Indices = input.ReadBytes();
            break;
          }
          case 34: {
            OctantRanges = input.ReadBytes();
            break;
          }
          case 42: {
            LayerCounts = input.ReadBytes();
            break;
          }
          case 50: {
            texture_.AddEntriesFrom(input, _repeated_texture_codec);
            break;
          }
          case 58: {
            TextureCoordinates = input.ReadBytes();
            break;
          }
          case 66: {
            LayerAndOctantCounts = input.ReadBytes();
            break;
          }
          case 74: {
            VertexAlphas = input.ReadBytes();
            break;
          }
          case 82:
          case 85: {
            uvOffsetAndScale_.AddEntriesFrom(input, _repeated_uvOffsetAndScale_codec);
            break;
          }
          case 90: {
            Normals = input.ReadBytes();
            break;
          }
          case 96: {
            MeshId = input.ReadUInt32();
            break;
          }
          case 106: {
            SkirtFlags = input.ReadBytes();
            break;
          }
          case 130: {
            NormalsDev = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Vertices = input.ReadBytes();
            break;
          }
          case 18: {
            TextureCoords = input.ReadBytes();
            break;
          }
          case 26: {
            Indices = input.ReadBytes();
            break;
          }
          case 34: {
            OctantRanges = input.ReadBytes();
            break;
          }
          case 42: {
            LayerCounts = input.ReadBytes();
            break;
          }
          case 50: {
            texture_.AddEntriesFrom(ref input, _repeated_texture_codec);
            break;
          }
          case 58: {
            TextureCoordinates = input.ReadBytes();
            break;
          }
          case 66: {
            LayerAndOctantCounts = input.ReadBytes();
            break;
          }
          case 74: {
            VertexAlphas = input.ReadBytes();
            break;
          }
          case 82:
          case 85: {
            uvOffsetAndScale_.AddEntriesFrom(ref input, _repeated_uvOffsetAndScale_codec);
            break;
          }
          case 90: {
            Normals = input.ReadBytes();
            break;
          }
          case 96: {
            MeshId = input.ReadUInt32();
            break;
          }
          case 106: {
            SkirtFlags = input.ReadBytes();
            break;
          }
          case 130: {
            NormalsDev = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Mesh message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Layer {
        [pbr::OriginalName("OVERGROUND")] Overground = 0,
        [pbr::OriginalName("TERRAIN_BELOW_WATER")] TerrainBelowWater = 1,
        [pbr::OriginalName("TERRAIN_ABOVE_WATER")] TerrainAboveWater = 2,
        [pbr::OriginalName("TERRAIN_HIDDEN")] TerrainHidden = 3,
        [pbr::OriginalName("WATER")] Water = 4,
        [pbr::OriginalName("WATER_SKIRTS")] WaterSkirts = 5,
        [pbr::OriginalName("WATER_SKIRTS_INVERTED")] WaterSkirtsInverted = 6,
        [pbr::OriginalName("OVERLAY_SURFACE")] OverlaySurface = 7,
        [pbr::OriginalName("OVERLAY_SURFACE_SKIRTS")] OverlaySurfaceSkirts = 8,
        [pbr::OriginalName("NUM_LAYERS")] NumLayers = 9,
      }

      public enum LayerMask {
        [pbr::OriginalName("TERRAIN_WITH_OVERGROUND")] TerrainWithOverground = 7,
        [pbr::OriginalName("TERRAIN_WITH_WATER")] TerrainWithWater = 28,
        [pbr::OriginalName("TERRAIN_WITHOUT_WATER")] TerrainWithoutWater = 14,
      }

    }
    #endregion

  }

  public sealed partial class Texture : pb::IMessage<Texture>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Texture> _parser = new pb::MessageParser<Texture>(() => new Texture());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Texture> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Texture() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Texture(Texture other) : this() {
      _hasBits0 = other._hasBits0;
      data_ = other.data_.Clone();
      format_ = other.format_;
      width_ = other.width_;
      height_ = other.height_;
      viewDirection_ = other.viewDirection_;
      meshId_ = other.meshId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Texture Clone() {
      return new Texture(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_data_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> data_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Data {
      get { return data_; }
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 2;
    private readonly static global::GeoGlobetrotterProtoRocktree.Texture.Types.Format FormatDefaultValue = global::GeoGlobetrotterProtoRocktree.Texture.Types.Format.Jpg;

    private global::GeoGlobetrotterProtoRocktree.Texture.Types.Format format_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.Texture.Types.Format Format {
      get { if ((_hasBits0 & 1) != 0) { return format_; } else { return FormatDefaultValue; } }
      set {
        _hasBits0 |= 1;
        format_ = value;
      }
    }
    /// <summary>Gets whether the "format" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFormat {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "format" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFormat() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private readonly static uint WidthDefaultValue = 256;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 2) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private readonly static uint HeightDefaultValue = 256;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 4) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 4;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "view_direction" field.</summary>
    public const int ViewDirectionFieldNumber = 5;
    private readonly static global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection ViewDirectionDefaultValue = global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection.Nadir;

    private global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection viewDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection ViewDirection {
      get { if ((_hasBits0 & 8) != 0) { return viewDirection_; } else { return ViewDirectionDefaultValue; } }
      set {
        _hasBits0 |= 8;
        viewDirection_ = value;
      }
    }
    /// <summary>Gets whether the "view_direction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasViewDirection {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "view_direction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearViewDirection() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "mesh_id" field.</summary>
    public const int MeshIdFieldNumber = 6;
    private readonly static uint MeshIdDefaultValue = 0;

    private uint meshId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MeshId {
      get { if ((_hasBits0 & 16) != 0) { return meshId_; } else { return MeshIdDefaultValue; } }
      set {
        _hasBits0 |= 16;
        meshId_ = value;
      }
    }
    /// <summary>Gets whether the "mesh_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMeshId {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "mesh_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMeshId() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Texture);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Texture other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      if (Format != other.Format) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (ViewDirection != other.ViewDirection) return false;
      if (MeshId != other.MeshId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (HasFormat) hash ^= Format.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasViewDirection) hash ^= ViewDirection.GetHashCode();
      if (HasMeshId) hash ^= MeshId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      data_.WriteTo(output, _repeated_data_codec);
      if (HasFormat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Format);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (HasViewDirection) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ViewDirection);
      }
      if (HasMeshId) {
        output.WriteRawTag(48);
        output.WriteUInt32(MeshId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      data_.WriteTo(ref output, _repeated_data_codec);
      if (HasFormat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Format);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (HasViewDirection) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ViewDirection);
      }
      if (HasMeshId) {
        output.WriteRawTag(48);
        output.WriteUInt32(MeshId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (HasFormat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (HasViewDirection) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ViewDirection);
      }
      if (HasMeshId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MeshId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Texture other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      if (other.HasFormat) {
        Format = other.Format;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasViewDirection) {
        ViewDirection = other.ViewDirection;
      }
      if (other.HasMeshId) {
        MeshId = other.MeshId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
          case 16: {
            Format = (global::GeoGlobetrotterProtoRocktree.Texture.Types.Format) input.ReadEnum();
            break;
          }
          case 24: {
            Width = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            ViewDirection = (global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection) input.ReadEnum();
            break;
          }
          case 48: {
            MeshId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            data_.AddEntriesFrom(ref input, _repeated_data_codec);
            break;
          }
          case 16: {
            Format = (global::GeoGlobetrotterProtoRocktree.Texture.Types.Format) input.ReadEnum();
            break;
          }
          case 24: {
            Width = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            ViewDirection = (global::GeoGlobetrotterProtoRocktree.Texture.Types.ViewDirection) input.ReadEnum();
            break;
          }
          case 48: {
            MeshId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Texture message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Format {
        [pbr::OriginalName("JPG")] Jpg = 1,
        [pbr::OriginalName("DXT1")] Dxt1 = 2,
        [pbr::OriginalName("ETC1")] Etc1 = 3,
        [pbr::OriginalName("PVRTC2")] Pvrtc2 = 4,
        [pbr::OriginalName("PVRTC4")] Pvrtc4 = 5,
        [pbr::OriginalName("CRN_DXT1")] CrnDxt1 = 6,
      }

      public enum ViewDirection {
        [pbr::OriginalName("NADIR")] Nadir = 0,
        [pbr::OriginalName("NORTH_45")] North45 = 1,
        [pbr::OriginalName("EAST_45")] East45 = 2,
        [pbr::OriginalName("SOUTH_45")] South45 = 3,
        [pbr::OriginalName("WEST_45")] West45 = 4,
      }

    }
    #endregion

  }

  public sealed partial class TextureData : pb::IMessage<TextureData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextureData> _parser = new pb::MessageParser<TextureData>(() => new TextureData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextureData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextureData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextureData(TextureData other) : this() {
      nodeKey_ = other.nodeKey_ != null ? other.nodeKey_.Clone() : null;
      textures_ = other.textures_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextureData Clone() {
      return new TextureData(this);
    }

    /// <summary>Field number for the "node_key" field.</summary>
    public const int NodeKeyFieldNumber = 1;
    private global::GeoGlobetrotterProtoRocktree.NodeKey nodeKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.NodeKey NodeKey {
      get { return nodeKey_; }
      set {
        nodeKey_ = value;
      }
    }

    /// <summary>Field number for the "textures" field.</summary>
    public const int TexturesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GeoGlobetrotterProtoRocktree.Texture> _repeated_textures_codec
        = pb::FieldCodec.ForMessage(18, global::GeoGlobetrotterProtoRocktree.Texture.Parser);
    private readonly pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Texture> textures_ = new pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Texture>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Texture> Textures {
      get { return textures_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextureData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextureData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NodeKey, other.NodeKey)) return false;
      if(!textures_.Equals(other.textures_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nodeKey_ != null) hash ^= NodeKey.GetHashCode();
      hash ^= textures_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nodeKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeKey);
      }
      textures_.WriteTo(output, _repeated_textures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nodeKey_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeKey);
      }
      textures_.WriteTo(ref output, _repeated_textures_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nodeKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeKey);
      }
      size += textures_.CalculateSize(_repeated_textures_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextureData other) {
      if (other == null) {
        return;
      }
      if (other.nodeKey_ != null) {
        if (nodeKey_ == null) {
          NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
        }
        NodeKey.MergeFrom(other.NodeKey);
      }
      textures_.Add(other.textures_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nodeKey_ == null) {
              NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(NodeKey);
            break;
          }
          case 18: {
            textures_.AddEntriesFrom(input, _repeated_textures_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nodeKey_ == null) {
              NodeKey = new global::GeoGlobetrotterProtoRocktree.NodeKey();
            }
            input.ReadMessage(NodeKey);
            break;
          }
          case 18: {
            textures_.AddEntriesFrom(ref input, _repeated_textures_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Copyrights : pb::IMessage<Copyrights>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Copyrights> _parser = new pb::MessageParser<Copyrights>(() => new Copyrights());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Copyrights> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Copyrights() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Copyrights(Copyrights other) : this() {
      copyrights_ = other.copyrights_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Copyrights Clone() {
      return new Copyrights(this);
    }

    /// <summary>Field number for the "copyrights" field.</summary>
    public const int Copyrights_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::GeoGlobetrotterProtoRocktree.Copyright> _repeated_copyrights_codec
        = pb::FieldCodec.ForMessage(10, global::GeoGlobetrotterProtoRocktree.Copyright.Parser);
    private readonly pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Copyright> copyrights_ = new pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Copyright>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::GeoGlobetrotterProtoRocktree.Copyright> Copyrights_ {
      get { return copyrights_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Copyrights);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Copyrights other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!copyrights_.Equals(other.copyrights_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= copyrights_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      copyrights_.WriteTo(output, _repeated_copyrights_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      copyrights_.WriteTo(ref output, _repeated_copyrights_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += copyrights_.CalculateSize(_repeated_copyrights_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Copyrights other) {
      if (other == null) {
        return;
      }
      copyrights_.Add(other.copyrights_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            copyrights_.AddEntriesFrom(input, _repeated_copyrights_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            copyrights_.AddEntriesFrom(ref input, _repeated_copyrights_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Copyright : pb::IMessage<Copyright>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Copyright> _parser = new pb::MessageParser<Copyright>(() => new Copyright());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Copyright> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Copyright() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Copyright(Copyright other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      text_ = other.text_;
      textClean_ = other.textClean_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Copyright Clone() {
      return new Copyright(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static string TextDefaultValue = "";

    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    /// <summary>Field number for the "text_clean" field.</summary>
    public const int TextCleanFieldNumber = 3;
    private readonly static string TextCleanDefaultValue = "";

    private string textClean_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextClean {
      get { return textClean_ ?? TextCleanDefaultValue; }
      set {
        textClean_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text_clean" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextClean {
      get { return textClean_ != null; }
    }
    /// <summary>Clears the value of the "text_clean" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextClean() {
      textClean_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Copyright);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Copyright other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Text != other.Text) return false;
      if (TextClean != other.TextClean) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (HasTextClean) hash ^= TextClean.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (HasTextClean) {
        output.WriteRawTag(26);
        output.WriteString(TextClean);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (HasTextClean) {
        output.WriteRawTag(26);
        output.WriteString(TextClean);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (HasTextClean) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextClean);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Copyright other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.HasTextClean) {
        TextClean = other.TextClean;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            TextClean = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            TextClean = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlanetoidMetadata : pb::IMessage<PlanetoidMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlanetoidMetadata> _parser = new pb::MessageParser<PlanetoidMetadata>(() => new PlanetoidMetadata());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlanetoidMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GeoGlobetrotterProtoRocktree.RocktreeReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlanetoidMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlanetoidMetadata(PlanetoidMetadata other) : this() {
      _hasBits0 = other._hasBits0;
      rootNodeMetadata_ = other.rootNodeMetadata_ != null ? other.rootNodeMetadata_.Clone() : null;
      radius_ = other.radius_;
      minTerrainAltitude_ = other.minTerrainAltitude_;
      maxTerrainAltitude_ = other.maxTerrainAltitude_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlanetoidMetadata Clone() {
      return new PlanetoidMetadata(this);
    }

    /// <summary>Field number for the "root_node_metadata" field.</summary>
    public const int RootNodeMetadataFieldNumber = 1;
    private global::GeoGlobetrotterProtoRocktree.NodeMetadata rootNodeMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::GeoGlobetrotterProtoRocktree.NodeMetadata RootNodeMetadata {
      get { return rootNodeMetadata_; }
      set {
        rootNodeMetadata_ = value;
      }
    }

    /// <summary>Field number for the "radius" field.</summary>
    public const int RadiusFieldNumber = 2;
    private readonly static float RadiusDefaultValue = 0F;

    private float radius_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Radius {
      get { if ((_hasBits0 & 1) != 0) { return radius_; } else { return RadiusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        radius_ = value;
      }
    }
    /// <summary>Gets whether the "radius" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRadius {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "radius" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRadius() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "min_terrain_altitude" field.</summary>
    public const int MinTerrainAltitudeFieldNumber = 3;
    private readonly static float MinTerrainAltitudeDefaultValue = 0F;

    private float minTerrainAltitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinTerrainAltitude {
      get { if ((_hasBits0 & 2) != 0) { return minTerrainAltitude_; } else { return MinTerrainAltitudeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        minTerrainAltitude_ = value;
      }
    }
    /// <summary>Gets whether the "min_terrain_altitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMinTerrainAltitude {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "min_terrain_altitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMinTerrainAltitude() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "max_terrain_altitude" field.</summary>
    public const int MaxTerrainAltitudeFieldNumber = 4;
    private readonly static float MaxTerrainAltitudeDefaultValue = 0F;

    private float maxTerrainAltitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxTerrainAltitude {
      get { if ((_hasBits0 & 4) != 0) { return maxTerrainAltitude_; } else { return MaxTerrainAltitudeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        maxTerrainAltitude_ = value;
      }
    }
    /// <summary>Gets whether the "max_terrain_altitude" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxTerrainAltitude {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "max_terrain_altitude" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxTerrainAltitude() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlanetoidMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlanetoidMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RootNodeMetadata, other.RootNodeMetadata)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinTerrainAltitude, other.MinTerrainAltitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxTerrainAltitude, other.MaxTerrainAltitude)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (rootNodeMetadata_ != null) hash ^= RootNodeMetadata.GetHashCode();
      if (HasRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
      if (HasMinTerrainAltitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinTerrainAltitude);
      if (HasMaxTerrainAltitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxTerrainAltitude);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rootNodeMetadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RootNodeMetadata);
      }
      if (HasRadius) {
        output.WriteRawTag(21);
        output.WriteFloat(Radius);
      }
      if (HasMinTerrainAltitude) {
        output.WriteRawTag(29);
        output.WriteFloat(MinTerrainAltitude);
      }
      if (HasMaxTerrainAltitude) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxTerrainAltitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rootNodeMetadata_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RootNodeMetadata);
      }
      if (HasRadius) {
        output.WriteRawTag(21);
        output.WriteFloat(Radius);
      }
      if (HasMinTerrainAltitude) {
        output.WriteRawTag(29);
        output.WriteFloat(MinTerrainAltitude);
      }
      if (HasMaxTerrainAltitude) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxTerrainAltitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (rootNodeMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RootNodeMetadata);
      }
      if (HasRadius) {
        size += 1 + 4;
      }
      if (HasMinTerrainAltitude) {
        size += 1 + 4;
      }
      if (HasMaxTerrainAltitude) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlanetoidMetadata other) {
      if (other == null) {
        return;
      }
      if (other.rootNodeMetadata_ != null) {
        if (rootNodeMetadata_ == null) {
          RootNodeMetadata = new global::GeoGlobetrotterProtoRocktree.NodeMetadata();
        }
        RootNodeMetadata.MergeFrom(other.RootNodeMetadata);
      }
      if (other.HasRadius) {
        Radius = other.Radius;
      }
      if (other.HasMinTerrainAltitude) {
        MinTerrainAltitude = other.MinTerrainAltitude;
      }
      if (other.HasMaxTerrainAltitude) {
        MaxTerrainAltitude = other.MaxTerrainAltitude;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rootNodeMetadata_ == null) {
              RootNodeMetadata = new global::GeoGlobetrotterProtoRocktree.NodeMetadata();
            }
            input.ReadMessage(RootNodeMetadata);
            break;
          }
          case 21: {
            Radius = input.ReadFloat();
            break;
          }
          case 29: {
            MinTerrainAltitude = input.ReadFloat();
            break;
          }
          case 37: {
            MaxTerrainAltitude = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rootNodeMetadata_ == null) {
              RootNodeMetadata = new global::GeoGlobetrotterProtoRocktree.NodeMetadata();
            }
            input.ReadMessage(RootNodeMetadata);
            break;
          }
          case 21: {
            Radius = input.ReadFloat();
            break;
          }
          case 29: {
            MinTerrainAltitude = input.ReadFloat();
            break;
          }
          case 37: {
            MaxTerrainAltitude = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
